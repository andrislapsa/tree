// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App.Views.Item = (function(_super) {
    __extends(Item, _super);

    function Item() {
      this.render = __bind(this.render, this);
      return Item.__super__.constructor.apply(this, arguments);
    }

    Item.prototype.tagName = 'div';

    Item.prototype.events = {
      'click > .add-child': 'addChild',
      'click > .remove-item': 'removeItem',
      'keyup input': 'update'
    };

    Item.prototype.initialize = function(options) {
      this.parent = options.parent;
      this.list = options.list;
      return this.template = _.template($('#item-template').html());
    };

    Item.prototype.render = function() {
      this.setElement(this.template(this.model.toJSON()));
      this.input = $(this.el).find('input');
      return this;
    };

    Item.prototype.update = function() {
      return this.model.save({
        title: this.input.val()
      });
    };

    Item.prototype.addChild = function() {
      return this.list.addNew({
        title: 'jaunais item',
        parent_id: this.model.get('id')
      });
    };

    Item.prototype.removeItem = function() {
      this.model.removeItem();
      return this.remove();
    };

    return Item;

  })(Backbone.View);

}).call(this);
