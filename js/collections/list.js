// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App.Collections.List = (function(_super) {
    __extends(List, _super);

    function List() {
      return List.__super__.constructor.apply(this, arguments);
    }

    List.prototype.model = App.Models.Item;

    List.prototype.localStorage = new Store('tree_objects');

    List.prototype.getNewId = function() {
      if (!this.length) {
        return 1;
      }
      return this.last().get('id') + 1;
    };

    List.prototype.addNew = function(data) {
      var item;
      item = new App.Models.Item;
      item.set(_.extend({
        id: this.getNewId()
      }, data));
      this.add(item);
      return item.save();
    };

    List.prototype.comparator = function(item) {
      return item.get('id');
    };

    return List;

  })(Backbone.Collection);

}).call(this);
